{"/mnt/d/repos/project_team279/src/controller/InsightFacade.ts":{"path":"/mnt/d/repos/project_team279/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":48}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":62}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":40}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":83}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":90}},"13":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":93}},"15":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":88}},"17":{"start":{"line":28,"column":20},"end":{"line":28,"column":41}},"18":{"start":{"line":29,"column":8},"end":{"line":44,"column":11}},"19":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"20":{"start":{"line":32,"column":16},"end":{"line":32,"column":102}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"22":{"start":{"line":37,"column":12},"end":{"line":37,"column":53}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":60}},"24":{"start":{"line":43,"column":12},"end":{"line":43,"column":67}},"25":{"start":{"line":47,"column":8},"end":{"line":59,"column":9}},"26":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"27":{"start":{"line":49,"column":16},"end":{"line":49,"column":70}},"28":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"29":{"start":{"line":52,"column":16},"end":{"line":52,"column":73}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":63}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":39}},"32":{"start":{"line":58,"column":12},"end":{"line":58,"column":39}},"33":{"start":{"line":62,"column":8},"end":{"line":62,"column":54}},"34":{"start":{"line":65,"column":8},"end":{"line":81,"column":9}},"35":{"start":{"line":66,"column":31},"end":{"line":66,"column":53}},"36":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"37":{"start":{"line":68,"column":16},"end":{"line":68,"column":43}},"38":{"start":{"line":70,"column":38},"end":{"line":76,"column":14}},"39":{"start":{"line":71,"column":16},"end":{"line":75,"column":18}},"40":{"start":{"line":77,"column":12},"end":{"line":77,"column":54}},"41":{"start":{"line":80,"column":12},"end":{"line":80,"column":39}},"42":{"start":{"line":84,"column":27},"end":{"line":84,"column":29}},"43":{"start":{"line":85,"column":39},"end":{"line":103,"column":10}},"44":{"start":{"line":86,"column":12},"end":{"line":102,"column":15}},"45":{"start":{"line":87,"column":16},"end":{"line":89,"column":17}},"46":{"start":{"line":88,"column":20},"end":{"line":88,"column":27}},"47":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"48":{"start":{"line":91,"column":20},"end":{"line":91,"column":47}},"49":{"start":{"line":93,"column":37},"end":{"line":93,"column":60}},"50":{"start":{"line":94,"column":16},"end":{"line":101,"column":19}},"51":{"start":{"line":95,"column":20},"end":{"line":97,"column":21}},"52":{"start":{"line":96,"column":24},"end":{"line":96,"column":46}},"53":{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},"54":{"start":{"line":99,"column":24},"end":{"line":99,"column":49}},"55":{"start":{"line":104,"column":8},"end":{"line":109,"column":11}},"56":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"57":{"start":{"line":106,"column":16},"end":{"line":106,"column":88}},"58":{"start":{"line":108,"column":12},"end":{"line":108,"column":37}},"59":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"60":{"start":{"line":113,"column":12},"end":{"line":113,"column":25}},"61":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"62":{"start":{"line":116,"column":12},"end":{"line":116,"column":25}},"63":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"64":{"start":{"line":119,"column":12},"end":{"line":119,"column":25}},"65":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"66":{"start":{"line":122,"column":12},"end":{"line":122,"column":25}},"67":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"68":{"start":{"line":125,"column":12},"end":{"line":125,"column":25}},"69":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"70":{"start":{"line":128,"column":12},"end":{"line":128,"column":25}},"71":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"72":{"start":{"line":131,"column":12},"end":{"line":131,"column":25}},"73":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"74":{"start":{"line":134,"column":12},"end":{"line":134,"column":25}},"75":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"76":{"start":{"line":137,"column":12},"end":{"line":137,"column":25}},"77":{"start":{"line":139,"column":8},"end":{"line":139,"column":67}},"78":{"start":{"line":142,"column":27},"end":{"line":149,"column":9}},"79":{"start":{"line":147,"column":16},"end":{"line":147,"column":61}},"80":{"start":{"line":150,"column":8},"end":{"line":150,"column":100}},"81":{"start":{"line":151,"column":27},"end":{"line":151,"column":49}},"82":{"start":{"line":152,"column":8},"end":{"line":152,"column":55}},"83":{"start":{"line":152,"column":43},"end":{"line":152,"column":53}},"84":{"start":{"line":155,"column":8},"end":{"line":169,"column":9}},"85":{"start":{"line":156,"column":26},"end":{"line":156,"column":66}},"86":{"start":{"line":157,"column":31},"end":{"line":157,"column":33}},"87":{"start":{"line":158,"column":12},"end":{"line":164,"column":15}},"88":{"start":{"line":159,"column":16},"end":{"line":163,"column":17}},"89":{"start":{"line":160,"column":33},"end":{"line":160,"column":90}},"90":{"start":{"line":161,"column":36},"end":{"line":161,"column":52}},"91":{"start":{"line":162,"column":20},"end":{"line":162,"column":45}},"92":{"start":{"line":165,"column":12},"end":{"line":165,"column":30}},"93":{"start":{"line":168,"column":12},"end":{"line":168,"column":22}},"94":{"start":{"line":172,"column":0},"end":{"line":172,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":14,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":34},"end":{"line":45,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":18},"end":{"line":30,"column":19}},"loc":{"start":{"line":30,"column":28},"end":{"line":35,"column":9}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":18},"end":{"line":36,"column":19}},"loc":{"start":{"line":36,"column":28},"end":{"line":38,"column":9}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":18},"end":{"line":39,"column":19}},"loc":{"start":{"line":39,"column":34},"end":{"line":41,"column":9}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":19},"end":{"line":42,"column":20}},"loc":{"start":{"line":42,"column":30},"end":{"line":44,"column":9}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":22},"end":{"line":60,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":24},"end":{"line":63,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":19},"end":{"line":82,"column":5}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":53},"end":{"line":70,"column":54}},"loc":{"start":{"line":70,"column":66},"end":{"line":76,"column":13}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":33},"end":{"line":110,"column":5}},"line":83},"12":{"name":"(anonymous_12)","decl":{"start":{"line":85,"column":67},"end":{"line":85,"column":68}},"loc":{"start":{"line":85,"column":85},"end":{"line":103,"column":9}},"line":85},"13":{"name":"(anonymous_13)","decl":{"start":{"line":86,"column":63},"end":{"line":86,"column":64}},"loc":{"start":{"line":86,"column":80},"end":{"line":102,"column":13}},"line":86},"14":{"name":"(anonymous_14)","decl":{"start":{"line":94,"column":44},"end":{"line":94,"column":45}},"loc":{"start":{"line":94,"column":57},"end":{"line":101,"column":17}},"line":94},"15":{"name":"(anonymous_15)","decl":{"start":{"line":104,"column":56},"end":{"line":104,"column":57}},"loc":{"start":{"line":104,"column":62},"end":{"line":109,"column":9}},"line":104},"16":{"name":"(anonymous_16)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":28},"end":{"line":140,"column":5}},"line":111},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":40},"end":{"line":153,"column":5}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":146,"column":36},"end":{"line":146,"column":37}},"loc":{"start":{"line":146,"column":49},"end":{"line":148,"column":13}},"line":146},"19":{"name":"(anonymous_19)","decl":{"start":{"line":152,"column":30},"end":{"line":152,"column":31}},"loc":{"start":{"line":152,"column":43},"end":{"line":152,"column":53}},"line":152},"20":{"name":"(anonymous_20)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":22},"end":{"line":170,"column":5}},"line":154},"21":{"name":"(anonymous_21)","decl":{"start":{"line":158,"column":26},"end":{"line":158,"column":27}},"loc":{"start":{"line":158,"column":36},"end":{"line":164,"column":13}},"line":158}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"4":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":55}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":35}},{"start":{"line":16,"column":39},"end":{"line":16,"column":55}}],"line":16},"5":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"6":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"7":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"8":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}],"line":31},"9":{"loc":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},{"start":{"line":48,"column":12},"end":{"line":50,"column":13}}],"line":48},"10":{"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":59}},"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":19}},{"start":{"line":48,"column":23},"end":{"line":48,"column":39}},{"start":{"line":48,"column":43},"end":{"line":48,"column":59}}],"line":48},"11":{"loc":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},{"start":{"line":51,"column":12},"end":{"line":53,"column":13}}],"line":51},"12":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"13":{"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":73}},"type":"binary-expr","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":39}},{"start":{"line":67,"column":43},"end":{"line":67,"column":73}}],"line":67},"14":{"loc":{"start":{"line":87,"column":16},"end":{"line":89,"column":17}},"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":89,"column":17}},{"start":{"line":87,"column":16},"end":{"line":89,"column":17}}],"line":87},"15":{"loc":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},{"start":{"line":90,"column":16},"end":{"line":92,"column":17}}],"line":90},"16":{"loc":{"start":{"line":90,"column":20},"end":{"line":90,"column":78}},"type":"binary-expr","locations":[{"start":{"line":90,"column":20},"end":{"line":90,"column":48}},{"start":{"line":90,"column":52},"end":{"line":90,"column":78}}],"line":90},"17":{"loc":{"start":{"line":95,"column":20},"end":{"line":97,"column":21}},"type":"if","locations":[{"start":{"line":95,"column":20},"end":{"line":97,"column":21}},{"start":{"line":95,"column":20},"end":{"line":97,"column":21}}],"line":95},"18":{"loc":{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},"type":"if","locations":[{"start":{"line":98,"column":20},"end":{"line":100,"column":21}},{"start":{"line":98,"column":20},"end":{"line":100,"column":21}}],"line":98},"19":{"loc":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},{"start":{"line":105,"column":12},"end":{"line":107,"column":13}}],"line":105},"20":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{"line":112,"column":8},"end":{"line":114,"column":9}}],"line":112},"21":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"22":{"loc":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},{"start":{"line":118,"column":8},"end":{"line":120,"column":9}}],"line":118},"23":{"loc":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},{"start":{"line":121,"column":8},"end":{"line":123,"column":9}}],"line":121},"24":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"25":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"26":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"27":{"loc":{"start":{"line":130,"column":12},"end":{"line":130,"column":56}},"type":"binary-expr","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":37}},{"start":{"line":130,"column":41},"end":{"line":130,"column":56}}],"line":130},"28":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"29":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":58}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":38}},{"start":{"line":133,"column":42},"end":{"line":133,"column":58}}],"line":133},"30":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"31":{"loc":{"start":{"line":136,"column":12},"end":{"line":136,"column":58}},"type":"binary-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":38}},{"start":{"line":136,"column":42},"end":{"line":136,"column":58}}],"line":136},"32":{"loc":{"start":{"line":139,"column":17},"end":{"line":139,"column":65}},"type":"binary-expr","locations":[{"start":{"line":139,"column":17},"end":{"line":139,"column":44}},{"start":{"line":139,"column":48},"end":{"line":139,"column":65}}],"line":139},"33":{"loc":{"start":{"line":159,"column":16},"end":{"line":163,"column":17}},"type":"if","locations":[{"start":{"line":159,"column":16},"end":{"line":163,"column":17}},{"start":{"line":159,"column":16},"end":{"line":163,"column":17}}],"line":159}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":44,"10":2,"11":42,"12":1,"13":41,"14":1,"15":40,"16":1,"17":39,"18":39,"19":38,"20":0,"21":38,"22":38,"23":23,"24":16,"25":5,"26":5,"27":2,"28":3,"29":1,"30":2,"31":2,"32":3,"33":63,"34":7,"35":7,"36":7,"37":0,"38":7,"39":7,"40":7,"41":0,"42":38,"43":38,"44":12073,"45":12031,"46":0,"47":12031,"48":99,"49":11932,"50":11932,"51":129325,"52":49273,"53":129325,"54":129307,"55":38,"56":37,"57":14,"58":23,"59":129325,"60":2,"61":129323,"62":2,"63":129321,"64":2,"65":129319,"66":2,"67":129317,"68":2,"69":129315,"70":1,"71":129314,"72":1,"73":129313,"74":2,"75":129311,"76":2,"77":129309,"78":23,"79":129307,"80":23,"81":23,"82":23,"83":32,"84":30,"85":30,"86":29,"87":29,"88":39,"89":39,"90":39,"91":39,"92":29,"93":1,"94":1},"f":{"0":2,"1":37,"2":44,"3":38,"4":38,"5":23,"6":16,"7":5,"8":63,"9":7,"10":7,"11":38,"12":12073,"13":12031,"14":129325,"15":37,"16":129325,"17":23,"18":129307,"19":32,"20":30,"21":39},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[2,42],"4":[44,43,43],"5":[1,41],"6":[1,40],"7":[1,39],"8":[0,38],"9":[2,3],"10":[5,4,4],"11":[1,2],"12":[0,7],"13":[7,3],"14":[0,12031],"15":[99,11932],"16":[12031,11932],"17":[49273,80052],"18":[129307,18],"19":[14,23],"20":[2,129323],"21":[2,129321],"22":[2,129319],"23":[2,129317],"24":[2,129315],"25":[1,129314],"26":[1,129313],"27":[129314,129313],"28":[2,129311],"29":[129313,129311],"30":[2,129309],"31":[129311,129309],"32":[129309,129307],"33":[39,0]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/controller/InsightFacade.ts","sources":["/mnt/d/repos/project_team279/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport {Section, SectionPruned, SectionQuery} from \"../models/ISection\";\nimport fs from \"fs-extra\";\nimport {DatasetModel} from \"../models/IModel\";\nimport {handleQuery} from \"../queryScripts/PerformQuery\";\nimport {doesDatasetIDExist} from \"./DiskUtil\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\n\tconstructor() {\n\t\t// console.log(\"InsightFacadeImpl::init()\");\n\t}\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// id data validation\n\t\tif (!id || /^\\s*$/.test(id) || id.includes(\"_\")) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid ID\"));\n\t\t}\n\t\t// check if id already exists in dataset\n\t\tif (doesDatasetIDExist(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"ID already exists\"));\n\t\t}\n\t\t// section type should Sections only\n\t\tif (kind !== InsightDatasetKind.Sections) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset kind\"));\n\t\t}\n\t\t// checks if zip content exists\n\t\tif (!content) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid Content\"));\n\t\t}\n\t\tconst zip = new JSZip();\n\t\treturn zip.loadAsync(content, {base64: true})\n\t\t\t.then((data) => {\n\t\t\t\t// data validation\n\t\t\t\tif (!data) {\n\t\t\t\t\tthrow new InsightError(\"Invalid Dataset: Missing courses directory\");\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// return an array of sections from content JSON\n\t\t\t\treturn this.fileProcessingPromises(data);\n\t\t\t})\n\t\t\t.then((sectionArr) => {\n\t\t\t\t// write the dataset to disk\n\t\t\t\treturn this.outputDataset(id, kind, sectionArr);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthrow new InsightError(error.message);\n\t\t\t});\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\ttry {\n\t\t\t// id data validation\n\t\t\tif (!id || /^\\s*$/.test(id) || id.includes(\"_\")) {\n\t\t\t\tthrow new InsightError(\"Invalid ID\");\n\t\t\t}\n\t\t\t// check if id exists in dataset, else stop execution\n\t\t\tif(!doesDatasetIDExist(id)){\n\t\t\t\tthrow new NotFoundError(\"ID not found\");\n\t\t\t}\n\t\t\t// remove the dataset from disk\n\t\t\tfs.removeSync(`./data/${id}.json`);\n\t\t\treturn Promise.resolve(id);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\treturn handleQuery(query);\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\ttry {\n\t\t\tconst datasetArr: DatasetModel[] = this.retrieveDataset();\n\t\t\t// check if datasetArr contains dataset objects, if not return empty array\n\t\t\tif (datasetArr.length === 1 && datasetArr[0].id === undefined) {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\t// return an array of InsightDataset objects\n\t\t\tconst insightDatasetArr: InsightDataset[] = datasetArr.map((dataset) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: dataset.id,\n\t\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\t\tnumRows: dataset.section.length,\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn Promise.resolve(insightDatasetArr);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\t// iterates through all files in the zip and returns an array of sections\n\tprivate fileProcessingPromises(data: JSZip): Promise<Section[]>{\n\t\tconst sectionArr: Section[] = [];\n\t\tconst fileProcessingPromises = Object.keys(data.files).map((relativePath) => {\n\t\t\treturn data.file(relativePath)?.async(\"text\").then((fileContent) => {\n\t\t\t\t// check if fileContent is undefined\n\t\t\t\tif (!fileContent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// if start doesnt contain {\" and the end doesnt contain \"} then its not a json file\n\t\t\t\tif (!fileContent.startsWith(\"{\") || !fileContent.endsWith(\"}\")) {\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\tconst sectionQuery: SectionQuery = JSON.parse(fileContent);\n\t\t\t\tsectionQuery.result.forEach((section: Section) => {\n\t\t\t\t\t// check if section is \"overall\"\n\t\t\t\t\tif (section.Section === \"overall\") {\n\t\t\t\t\t\tsection.Year = \"1900\";\n\t\t\t\t\t}\n\t\t\t\t\t// check if section is valid\n\t\t\t\t\tif (this.isValidSection(section)) {\n\t\t\t\t\t\t// throw new InsightError(\"Invalid JSON data in file: \" + relativePath);\n\t\t\t\t\t\tsectionArr.push(section);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn Promise.all(fileProcessingPromises).then(() => {\n\t\t\t// check if sectionArr is empty\n\t\t\tif (sectionArr.length === 0) {\n\t\t\t\tthrow new InsightError(\"No valid sections in dataset\");\n\t\t\t}\n\t\t\treturn sectionArr.flat();\n\t\t});\n\t}\n\n\t// checks if JSON data injected the Section object with valid fields (i.e. not undefined)\n\tprivate isValidSection(section: Section): boolean {\n\t\tif(!section.Course){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Course\");\n\t\t}\n\t\tif(!section.id){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid id\");\n\t\t}\n\t\tif(section.Title === undefined){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Title\");\n\t\t}\n\t\tif(section.Professor === undefined){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Professor\");\n\t\t}\n\t\tif(section.Subject === undefined){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Subject\");\n\t\t}\n\t\tif(!section.Year){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Year\");\n\t\t}\n\t\tif(section.Avg === undefined || section.Avg < 0){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Avg\");\n\t\t}\n\t\tif(section.Pass === undefined || section.Pass < 0){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Pass\");\n\t\t}\n\t\tif(section.Fail === undefined || section.Fail < 0){\n\t\t\treturn false;\n\t\t\t// throw new InsightError(\"Invalid Fail\");\n\t\t}\n\t\treturn !(section.Audit === undefined || section.Audit < 0);\n\n\t}\n\n\tprivate outputDataset(id: string, kind: InsightDatasetKind,\n\t\t\t\t\t\t  sectionArr: Section[] ): string[] {\n\n\t\t// the dataset output with the pruned version of the original JSON input\n\t\tconst newDataset: DatasetModel = {\n\t\t\tid: id,\n\t\t\tkind: kind,\n\t\t\tnumRows: sectionArr.length,\n\t\t\tsection: sectionArr.map((section) => {\n\t\t\t\treturn new SectionPruned(section);\n\t\t\t})\n\t\t};\n\t\t// outputs JSON file for an id\n\t\tfs.outputFileSync(`./data/${id}.json`, JSON.stringify(newDataset, null, 4));\n\t\t// TODO: room for potential improvement for computation speed\n\t\t// return ids from datasetArr\n\t\tconst datasetArr: DatasetModel[] = this.retrieveDataset();\n\t\treturn datasetArr.map((dataset) => dataset.id);\n\t}\n\n\tprivate retrieveDataset(): DatasetModel[] {\n\t\ttry {\n\t\t\t// retrieve all JSON files from ./data if it exists\n\t\t\tconst files = fs.readdirSync(\"./data\");\n\t\t\t// return an array of dataset objects\n\t\t\tconst datasetArr: DatasetModel[] = [];\n\t\t\t// iterate through all files in ./data\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tif (file.endsWith(\".json\")) {\n\t\t\t\t\tconst data = fs.readFileSync(`./data/${file}`, \"utf8\");\n\t\t\t\t\tconst dataset: DatasetModel = JSON.parse(data);\n\t\t\t\t\tdatasetArr.push(dataset);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn datasetArr;\n\t\t} catch (err) {\n\t\t\treturn [];\n\t\t}\n\t}\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ceed571d0dd1f66125ae08ffd669fb2eff1e2e3c","contentHash":"395b9cd257e7696b91f8539cea3e67e7eabb976755a9ba55738d167249b6134b"},"/mnt/d/repos/project_team279/src/controller/IInsightFacade.ts":{"path":"/mnt/d/repos/project_team279/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":57,"6":57,"7":1,"8":1,"9":1,"10":1,"11":12,"12":12,"13":1},"f":{"0":1,"1":57,"2":1,"3":12},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/controller/IInsightFacade.ts","sources":["/mnt/d/repos/project_team279/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a8758764d15485cda3fc525dcf2dd4e7803c501c","contentHash":"1db50b19b3037cf625418f038305191bec00461869ed0e27cee2c53ce6b02c1a"},"/mnt/d/repos/project_team279/src/models/ISection.ts":{"path":"/mnt/d/repos/project_team279/src/models/ISection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":16,"column":8},"end":{"line":39,"column":9}},"3":{"start":{"line":17,"column":12},"end":{"line":17,"column":37}},"4":{"start":{"line":18,"column":12},"end":{"line":18,"column":33}},"5":{"start":{"line":19,"column":12},"end":{"line":19,"column":39}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":49}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":37}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":35}},"10":{"start":{"line":24,"column":12},"end":{"line":24,"column":37}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":37}},"12":{"start":{"line":26,"column":12},"end":{"line":26,"column":39}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":46}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":37}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":39}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":48}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":40}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":45}},"19":{"start":{"line":35,"column":12},"end":{"line":35,"column":35}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":37}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":37}},"22":{"start":{"line":38,"column":12},"end":{"line":38,"column":39}},"23":{"start":{"line":43,"column":8},"end":{"line":76,"column":9}},"24":{"start":{"line":45,"column":16},"end":{"line":45,"column":39}},"25":{"start":{"line":46,"column":16},"end":{"line":46,"column":22}},"26":{"start":{"line":48,"column":16},"end":{"line":48,"column":37}},"27":{"start":{"line":49,"column":16},"end":{"line":49,"column":22}},"28":{"start":{"line":51,"column":16},"end":{"line":51,"column":40}},"29":{"start":{"line":52,"column":16},"end":{"line":52,"column":22}},"30":{"start":{"line":54,"column":16},"end":{"line":54,"column":45}},"31":{"start":{"line":55,"column":16},"end":{"line":55,"column":22}},"32":{"start":{"line":57,"column":16},"end":{"line":57,"column":39}},"33":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"34":{"start":{"line":60,"column":16},"end":{"line":60,"column":39}},"35":{"start":{"line":61,"column":16},"end":{"line":61,"column":22}},"36":{"start":{"line":63,"column":16},"end":{"line":63,"column":38}},"37":{"start":{"line":64,"column":16},"end":{"line":64,"column":22}},"38":{"start":{"line":66,"column":16},"end":{"line":66,"column":39}},"39":{"start":{"line":67,"column":16},"end":{"line":67,"column":22}},"40":{"start":{"line":69,"column":16},"end":{"line":69,"column":39}},"41":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"42":{"start":{"line":72,"column":16},"end":{"line":72,"column":40}},"43":{"start":{"line":73,"column":16},"end":{"line":73,"column":22}},"44":{"start":{"line":75,"column":16},"end":{"line":75,"column":32}},"45":{"start":{"line":77,"column":8},"end":{"line":77,"column":26}},"46":{"start":{"line":80,"column":0},"end":{"line":80,"column":38}},"47":{"start":{"line":82,"column":4},"end":{"line":82,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":25},"end":{"line":40,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":24},"end":{"line":78,"column":5}},"line":41},"2":{"name":"isSectionPruned","decl":{"start":{"line":81,"column":9},"end":{"line":81,"column":24}},"loc":{"start":{"line":81,"column":34},"end":{"line":83,"column":1}},"line":81}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":39,"column":9}},{"start":{"line":16,"column":8},"end":{"line":39,"column":9}}],"line":16},"1":{"loc":{"start":{"line":43,"column":8},"end":{"line":76,"column":9}},"type":"switch","locations":[{"start":{"line":44,"column":12},"end":{"line":46,"column":22}},{"start":{"line":47,"column":12},"end":{"line":49,"column":22}},{"start":{"line":50,"column":12},"end":{"line":52,"column":22}},{"start":{"line":53,"column":12},"end":{"line":55,"column":22}},{"start":{"line":56,"column":12},"end":{"line":58,"column":22}},{"start":{"line":59,"column":12},"end":{"line":61,"column":22}},{"start":{"line":62,"column":12},"end":{"line":64,"column":22}},{"start":{"line":65,"column":12},"end":{"line":67,"column":22}},{"start":{"line":68,"column":12},"end":{"line":70,"column":22}},{"start":{"line":71,"column":12},"end":{"line":73,"column":22}},{"start":{"line":74,"column":12},"end":{"line":75,"column":32}}],"line":43}},"s":{"0":1,"1":1,"2":2127854,"3":1998547,"4":1998547,"5":1998547,"6":1998547,"7":1998547,"8":1998547,"9":1998547,"10":1998547,"11":1998547,"12":1998547,"13":129307,"14":129307,"15":129307,"16":129307,"17":129307,"18":129307,"19":129307,"20":129307,"21":129307,"22":129307,"23":2328899,"24":49,"25":49,"26":105,"27":105,"28":284375,"29":284375,"30":369081,"31":369081,"32":143440,"33":143440,"34":88,"35":88,"36":1531614,"37":1531614,"38":49,"39":49,"40":49,"41":49,"42":49,"43":49,"44":0,"45":2328899,"46":1,"47":2127854},"f":{"0":2127854,"1":2328899,"2":2127854},"b":{"0":[1998547,129307],"1":[49,105,284375,369081,143440,88,1531614,49,49,49,0]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/models/ISection.ts","sources":["/mnt/d/repos/project_team279/src/models/ISection.ts"],"names":[],"mappings":"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","sourcesContent":["export interface SectionQuery {\n\tresult: Section[];\n\trank:   number;\n}\n\nexport interface Section {\n\ttier_eighty_five: number;\n\ttier_ninety: number;\n\tTitle: string;\n\tSection: string;\n\tDetail: string;\n\ttier_seventy_two: number;\n\tOther: number;\n\tLow: number;\n\ttier_sixty_four: number;\n\tid: number;\n\ttier_sixty_eight: number;\n\ttier_zero: number;\n\ttier_seventy_six: number;\n\ttier_thirty: number;\n\ttier_fifty: number;\n\tProfessor: string;\n\tAudit: number;\n\ttier_g_fifty: number;\n\ttier_forty: number;\n\tWithdrew: number;\n\tYear: string;\n\ttier_twenty: number;\n\tStddev: number;\n\tEnrolled: number;\n\ttier_fifty_five: number;\n\ttier_eighty: number;\n\ttier_sixty: number;\n\ttier_ten: number;\n\tHigh: number;\n\tCourse: string;\n\tSession: string;\n\tPass: number;\n\tFail: number;\n\tAvg: number;\n\tCampus: string;\n\tSubject: string;\n}\n\nexport class SectionPruned {\n\tpublic uuid: string;\n\tpublic id: string;\n\tpublic title: string;\n\tpublic instructor: string;\n\tpublic dept: string;\n\tpublic year: number;\n\tpublic avg: number;\n\tpublic pass: number;\n\tpublic fail: number;\n\tpublic audit: number;\n\n\tconstructor(section: any) {\n\t\t// passing either Section or SectionPruned; SectionPruned wouldn't have a field of Course\n\t\tif(isSectionPruned(section)) {\n\t\t\tthis.uuid = section.uuid;\n\t\t\tthis.id = section.id;\n\t\t\tthis.title = section.title;\n\t\t\tthis.instructor = section.instructor;\n\t\t\tthis.dept = section.dept;\n\t\t\tthis.year = section.year;\n\t\t\tthis.avg = section.avg;\n\t\t\tthis.pass = section.pass;\n\t\t\tthis.fail = section.fail;\n\t\t\tthis.audit = section.audit;\n\t\t} else {\n\t\t\tthis.uuid = section.id.toString();\n\t\t\tthis.id = section.Course;\n\t\t\tthis.title = section.Title;\n\t\t\tthis.instructor = section.Professor;\n\t\t\tthis.dept = section.Subject;\n\t\t\tthis.year = Number(section.Year);\n\t\t\tthis.avg = section.Avg;\n\t\t\tthis.pass = section.Pass;\n\t\t\tthis.fail = section.Fail;\n\t\t\tthis.audit = section.Audit;\n\t\t}\n\t}\n\n\tpublic getField(fieldName: string) {\n\t\tlet fieldValue: string | number;\n\n\t\tswitch (fieldName) {\n\t\t\tcase \"uuid\":\n\t\t\t\tfieldValue = this.uuid;\n\t\t\t\tbreak;\n\t\t\tcase \"id\":\n\t\t\t\tfieldValue = this.id;\n\t\t\t\tbreak;\n\t\t\tcase \"title\":\n\t\t\t\tfieldValue = this.title;\n\t\t\t\tbreak;\n\t\t\tcase \"instructor\":\n\t\t\t\tfieldValue = this.instructor;\n\t\t\t\tbreak;\n\t\t\tcase \"dept\":\n\t\t\t\tfieldValue = this.dept;\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tfieldValue = this.year;\n\t\t\t\tbreak;\n\t\t\tcase \"avg\":\n\t\t\t\tfieldValue = this.avg;\n\t\t\t\tbreak;\n\t\t\tcase \"pass\":\n\t\t\t\tfieldValue = this.pass;\n\t\t\t\tbreak;\n\t\t\tcase \"fail\":\n\t\t\t\tfieldValue = this.fail;\n\t\t\t\tbreak;\n\t\t\tcase \"audit\":\n\t\t\t\tfieldValue = this.audit;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfieldValue = \"\";\n\t\t}\n\n\t\treturn fieldValue;\n\t}\n}\n\nfunction isSectionPruned(section: any) {\n\treturn section.Course === undefined;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab440d04e3fbcfc94af6eeaa02b7ebdca87b925c","contentHash":"8484ce0cd2293744b88801e1fc2e977747c4a0a70bf1cfc425b7e4ca4e6137a1"},"/mnt/d/repos/project_team279/src/queryScripts/PerformQuery.ts":{"path":"/mnt/d/repos/project_team279/src/queryScripts/PerformQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":23},"end":{"line":7,"column":48}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},"7":{"start":{"line":10,"column":22},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":89}},"10":{"start":{"line":14,"column":4},"end":{"line":29,"column":7}},"11":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":78}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":41}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},"15":{"start":{"line":24,"column":25},"end":{"line":24,"column":42}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":70}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":70}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":37}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":105}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}},"22":{"start":{"line":37,"column":20},"end":{"line":37,"column":22}},"23":{"start":{"line":38,"column":20},"end":{"line":38,"column":78}},"24":{"start":{"line":39,"column":21},"end":{"line":39,"column":22}},"25":{"start":{"line":40,"column":4},"end":{"line":52,"column":5}},"26":{"start":{"line":41,"column":26},"end":{"line":41,"column":63}},"27":{"start":{"line":42,"column":8},"end":{"line":51,"column":9}},"28":{"start":{"line":43,"column":12},"end":{"line":50,"column":13}},"29":{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},"30":{"start":{"line":45,"column":16},"end":{"line":45,"column":29}},"31":{"start":{"line":48,"column":16},"end":{"line":49,"column":82}},"32":{"start":{"line":53,"column":26},"end":{"line":53,"column":107}},"33":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"34":{"start":{"line":55,"column":8},"end":{"line":55,"column":94}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":31}}},"fnMap":{"0":{"name":"handleQuery","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":20}},"loc":{"start":{"line":9,"column":28},"end":{"line":30,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":39},"end":{"line":14,"column":40}},"loc":{"start":{"line":14,"column":60},"end":{"line":23,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":12},"end":{"line":23,"column":13}},"loc":{"start":{"line":23,"column":29},"end":{"line":27,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":13},"end":{"line":27,"column":14}},"loc":{"start":{"line":27,"column":24},"end":{"line":29,"column":5}},"line":27},"4":{"name":"isJSON","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":15}},"loc":{"start":{"line":32,"column":23},"end":{"line":34,"column":1}},"line":32},"5":{"name":"executeQuery","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":21}},"loc":{"start":{"line":36,"column":47},"end":{"line":60,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"1":{"loc":{"start":{"line":33,"column":12},"end":{"line":33,"column":103}},"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":49}},{"start":{"line":33,"column":53},"end":{"line":33,"column":78}},{"start":{"line":33,"column":82},"end":{"line":33,"column":103}}],"line":33},"2":{"loc":{"start":{"line":42,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":51,"column":9}},{"start":{"line":42,"column":8},"end":{"line":51,"column":9}}],"line":42},"3":{"loc":{"start":{"line":43,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":50,"column":13}},{"start":{"line":43,"column":12},"end":{"line":50,"column":13}}],"line":43},"4":{"loc":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},{"start":{"line":54,"column":4},"end":{"line":59,"column":5}}],"line":54}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":63,"8":63,"9":0,"10":63,"11":63,"12":63,"13":20,"14":43,"15":43,"16":43,"17":43,"18":32,"19":1,"20":133,"21":1,"22":43,"23":43,"24":43,"25":43,"26":1998547,"27":1998547,"28":71113,"29":71101,"30":71101,"31":12,"32":31,"33":31,"34":31,"35":0},"f":{"0":63,"1":63,"2":43,"3":32,"4":133,"5":43},"b":{"0":[0,63],"1":[133,133,133,133],"2":[71113,1927434],"3":[71101,12],"4":[31,0]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/queryScripts/PerformQuery.ts","sources":["/mnt/d/repos/project_team279/src/queryScripts/PerformQuery.ts"],"names":[],"mappings":";;;AAAA,iEAA8F;AAC9F,iDAAiD;AACjD,qDAAuD;AACvD,iDAA2F;AAE3F,mDAA8C;AAG9C,SAAgB,WAAW,CAAC,KAAc;IACzC,IAAI,WAAW,GAAoB,EAAE,CAAC;IACtC,IAAI,CAAC,MAAM,EAAE;QACZ,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC;KAChE;IAED,OAAO,OAAO,CAAC,OAAO,CAAC,KAAe,CAAC,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,EAAE;QAChE,IAAI,WAAwB,CAAC;QAC7B,IAAI;YACH,WAAW,GAAG,IAAA,6BAAa,EAAC,eAAe,CAAC,CAAC;SAC7C;QAAC,OAAO,KAAK,EAAE;YACf,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,WAAW,CAAC;IACpB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;QAEvB,IAAI,UAAU,GAAI,WAA2B,CAAC,KAAK,CAAC;QAEpD,WAAW,GAAG,IAAA,0BAAe,EAAE,WAA2B,CAAC,EAAE,CAAC,CAAC;QAC/D,OAAO,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QAClB,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACJ,CAAC;AAvBD,kCAuBC;AAGD,SAAgB,MAAM,CAAC,KAAc;IAGpC,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACtG,CAAC;AAJD,wBAIC;AAED,SAAS,YAAY,CAAC,UAAe,EAAE,WAA4B;IAClE,IAAI,SAAS,GAAoB,EAAE,CAAC;IACpC,IAAI,SAAS,GAAiB,IAAA,gCAAiB,EAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACrE,IAAI,UAAU,GAAG,CAAC,CAAC;IAGnB,KAAK,IAAI,OAAO,IAAI,WAAW,EAAE;QAChC,IAAI,WAAW,GAAG,IAAI,wBAAa,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAG,IAAA,0BAAW,EAAC,WAAW,EAAE,SAAS,CAAC,EAAE;YACvC,IAAI,UAAU,IAAI,IAAI,EAAE;gBACvB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC5B,UAAU,EAAE,CAAC;aACb;iBAAM;gBACN,MAAM,IAAI,oCAAmB,CAAC,yBAAyB;oBACtD,4DAA4D,CAAC,CAAC;aAC/D;SACD;KACD;IAED,IAAI,eAAe,GAAG,IAAA,+BAAgB,EAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAEpF,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE;QACnC,OAAO,IAAA,wBAAS,EAAC,eAAe,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KAClE;SAAM;QACN,OAAO,eAAe,CAAC;KACvB;AACF,CAAC","sourcesContent":["import {InsightError, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\nimport {SectionPruned} from \"../models/ISection\";\nimport {retrieveDataset} from \"../controller/DiskUtil\";\nimport {passesQuery, transformColumns, orderRows, processQueryToAST} from \"./ExecuteQuery\";\nimport {QueryASTNode} from \"../models/QueryASTNode\";\nimport {validateQuery} from \"./ValidateQuery\";\nimport {QueryWithID} from \"../models/IQuery\";\n\nexport function handleQuery(query: unknown): Promise<InsightResult[]> {\n\tlet sectionList: SectionPruned[] = [];\n\tif (!isJSON) {\n\t\treturn Promise.reject(new InsightError(\"Invalid query string\"));\n\t}\n\n\treturn Promise.resolve(query as object).then((queryToValidate) => {\n\t\tlet queryWithID: QueryWithID;\n\t\ttry {\n\t\t\tqueryWithID = validateQuery(queryToValidate);\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t\treturn queryWithID;\n\t}).then((queryWithID) => {\n\t\t// construct tree and process the query\n\t\tlet validQuery = (queryWithID as QueryWithID).query;\n\t\t// TODO: refactor to make this async\n\t\tsectionList = retrieveDataset((queryWithID as QueryWithID).id);\n\t\treturn Promise.resolve(executeQuery(validQuery, sectionList));\n\t}).catch((error) => {\n\t\treturn Promise.reject(error);\n\t});\n}\n\n// returns true if input looks like valid JSON\nexport function isJSON(input: unknown): boolean {\n\t// checks if input is valid JSON\n\t// arrays are objects, so we must ensure that input is not an array\n\treturn (input !== null && input !== undefined && typeof input === \"object\" && !Array.isArray(input));\n}\n\nfunction executeQuery(inputQuery: any, sectionList: SectionPruned[])  {\n\tlet rawResult: SectionPruned[] = [];\n\tlet queryTree: QueryASTNode = processQueryToAST(inputQuery[\"WHERE\"]);\n\tlet resultSize = 0;\n\n\t// iterate through section list and add sections to unprocessed result list that pass query\n\tfor (let section of sectionList) {\n\t\tlet currSection = new SectionPruned(section);\n\t\tif(passesQuery(currSection, queryTree)) {\n\t\t\tif (resultSize <= 5000) {\n\t\t\t\trawResult.push(currSection);\n\t\t\t\tresultSize++;\n\t\t\t} else {\n\t\t\t\tthrow new ResultTooLargeError(\"The result is too big. \" +\n\t\t\t\t\t\"Only queries with a maximum of 5000 results are supported.\");\n\t\t\t}\n\t\t}\n\t}\n\t// should transform result sections to object containing just the columns given\n\tlet processedResult = transformColumns(rawResult, inputQuery[\"OPTIONS\"][\"COLUMNS\"]);\n\t// will order transformed results if order key is given, else return unordered result\n\tif (inputQuery[\"OPTIONS\"][\"ORDER\"]) {\n\t\treturn orderRows(processedResult, inputQuery[\"OPTIONS\"][\"ORDER\"]);\n\t} else {\n\t\treturn processedResult;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"50e79032c709680a8ee2e2ce9dd0179b7d6122d3","contentHash":"060f4b8b630960f37e16621d5404cde3ba82d7ef0dd3f9a205656dce2676471f"},"/mnt/d/repos/project_team279/src/controller/DiskUtil.ts":{"path":"/mnt/d/repos/project_team279/src/controller/DiskUtil.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":55}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":67}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}},"7":{"start":{"line":13,"column":17},"end":{"line":13,"column":82}},"8":{"start":{"line":14,"column":20},"end":{"line":14,"column":36}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":27}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"doesDatasetIDExist","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":27}},"loc":{"start":{"line":8,"column":32},"end":{"line":10,"column":1}},"line":8},"2":{"name":"retrieveDataset","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":24}},"loc":{"start":{"line":12,"column":29},"end":{"line":16,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":88,"6":1,"7":43,"8":43,"9":43,"10":1},"f":{"0":1,"1":88,"2":43},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/controller/DiskUtil.ts","sources":["/mnt/d/repos/project_team279/src/controller/DiskUtil.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA0B;AAK1B,SAAgB,kBAAkB,CAAC,EAAU;IAC5C,OAAO,kBAAE,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AAChD,CAAC;AAFD,gDAEC;AAID,SAAgB,eAAe,CAAC,EAAU;IACzC,MAAM,IAAI,GAAG,kBAAE,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC;IAC/D,MAAM,OAAO,GAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/C,OAAO,OAAO,CAAC,OAAO,CAAC;AACxB,CAAC;AAJD,0CAIC","sourcesContent":["import fs from \"fs-extra\";\nimport {SectionPruned} from \"../models/ISection\";\nimport {DatasetModel} from \"../models/IModel\";\n\n// TODO: make this async\nexport function doesDatasetIDExist(id: string): boolean {\n\treturn fs.existsSync(\"./data/\" + id + \".json\");\n}\n\n// TODO: make this async async\n// retrieve dataset with given ID\nexport function retrieveDataset(id: string): SectionPruned[] {\n\tconst data = fs.readFileSync(\"./data/\" + id + \".json\", \"utf8\");\n\tconst dataset: DatasetModel = JSON.parse(data);\n\treturn dataset.section;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63b3265a69aebcd346266ee2ab90607d21a21126","contentHash":"6051b4db05c8362f1e4b9044f9c7acb34da9178626c5ca820c8265af914f769d"},"/mnt/d/repos/project_team279/src/queryScripts/ExecuteQuery.ts":{"path":"/mnt/d/repos/project_team279/src/queryScripts/ExecuteQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":104}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":56}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":64}},"5":{"start":{"line":9,"column":23},"end":{"line":9,"column":48}},"6":{"start":{"line":10,"column":23},"end":{"line":10,"column":46}},"7":{"start":{"line":11,"column":4},"end":{"line":28,"column":5}},"8":{"start":{"line":12,"column":22},"end":{"line":12,"column":71}},"9":{"start":{"line":13,"column":24},"end":{"line":13,"column":55}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":36}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"12":{"start":{"line":17,"column":9},"end":{"line":28,"column":5}},"13":{"start":{"line":18,"column":26},"end":{"line":18,"column":54}},"14":{"start":{"line":19,"column":19},"end":{"line":19,"column":90}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":69}},"16":{"start":{"line":23,"column":23},"end":{"line":23,"column":72}},"17":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"18":{"start":{"line":25,"column":12},"end":{"line":25,"column":60}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":24}},"20":{"start":{"line":30,"column":0},"end":{"line":30,"column":46}},"21":{"start":{"line":32,"column":25},"end":{"line":32,"column":30}},"22":{"start":{"line":33,"column":23},"end":{"line":33,"column":32}},"23":{"start":{"line":34,"column":24},"end":{"line":34,"column":38}},"24":{"start":{"line":35,"column":4},"end":{"line":64,"column":5}},"25":{"start":{"line":37,"column":12},"end":{"line":37,"column":34}},"26":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"27":{"start":{"line":39,"column":16},"end":{"line":39,"column":83}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":34}},"29":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"30":{"start":{"line":44,"column":16},"end":{"line":44,"column":83}},"31":{"start":{"line":46,"column":12},"end":{"line":46,"column":34}},"32":{"start":{"line":48,"column":12},"end":{"line":48,"column":74}},"33":{"start":{"line":50,"column":12},"end":{"line":50,"column":74}},"34":{"start":{"line":52,"column":12},"end":{"line":52,"column":74}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":63}},"36":{"start":{"line":57,"column":12},"end":{"line":57,"column":64}},"37":{"start":{"line":60,"column":12},"end":{"line":60,"column":24}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":34}},"39":{"start":{"line":66,"column":0},"end":{"line":66,"column":34}},"40":{"start":{"line":68,"column":28},"end":{"line":68,"column":30}},"41":{"start":{"line":69,"column":4},"end":{"line":78,"column":5}},"42":{"start":{"line":70,"column":33},"end":{"line":70,"column":35}},"43":{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},"44":{"start":{"line":72,"column":12},"end":{"line":75,"column":13}},"45":{"start":{"line":73,"column":32},"end":{"line":73,"column":52}},"46":{"start":{"line":74,"column":16},"end":{"line":74,"column":73}},"47":{"start":{"line":77,"column":8},"end":{"line":77,"column":51}},"48":{"start":{"line":79,"column":4},"end":{"line":79,"column":29}},"49":{"start":{"line":81,"column":0},"end":{"line":81,"column":44}},"50":{"start":{"line":83,"column":4},"end":{"line":91,"column":7}},"51":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"52":{"start":{"line":85,"column":12},"end":{"line":85,"column":22}},"53":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"54":{"start":{"line":88,"column":12},"end":{"line":88,"column":21}},"55":{"start":{"line":90,"column":8},"end":{"line":90,"column":17}},"56":{"start":{"line":93,"column":0},"end":{"line":93,"column":30}},"57":{"start":{"line":95,"column":20},"end":{"line":95,"column":49}},"58":{"start":{"line":96,"column":17},"end":{"line":96,"column":37}},"59":{"start":{"line":97,"column":23},"end":{"line":97,"column":50}},"60":{"start":{"line":98,"column":4},"end":{"line":107,"column":5}},"61":{"start":{"line":100,"column":12},"end":{"line":100,"column":41}},"62":{"start":{"line":102,"column":12},"end":{"line":102,"column":41}},"63":{"start":{"line":104,"column":12},"end":{"line":104,"column":43}},"64":{"start":{"line":106,"column":12},"end":{"line":106,"column":24}},"65":{"start":{"line":110,"column":20},"end":{"line":110,"column":49}},"66":{"start":{"line":111,"column":17},"end":{"line":111,"column":37}},"67":{"start":{"line":112,"column":16},"end":{"line":112,"column":43}},"68":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"69":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"70":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"71":{"start":{"line":117,"column":8},"end":{"line":117,"column":21}},"72":{"start":{"line":119,"column":4},"end":{"line":130,"column":5}},"73":{"start":{"line":120,"column":8},"end":{"line":120,"column":51}},"74":{"start":{"line":122,"column":9},"end":{"line":130,"column":5}},"75":{"start":{"line":123,"column":8},"end":{"line":123,"column":47}},"76":{"start":{"line":125,"column":9},"end":{"line":130,"column":5}},"77":{"start":{"line":126,"column":8},"end":{"line":126,"column":53}},"78":{"start":{"line":129,"column":8},"end":{"line":129,"column":32}}},"fnMap":{"0":{"name":"processQueryToAST","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":38},"end":{"line":29,"column":1}},"line":5},"1":{"name":"passesQuery","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":20}},"loc":{"start":{"line":31,"column":41},"end":{"line":65,"column":1}},"line":31},"2":{"name":"transformColumns","decl":{"start":{"line":67,"column":9},"end":{"line":67,"column":25}},"loc":{"start":{"line":67,"column":46},"end":{"line":80,"column":1}},"line":67},"3":{"name":"orderRows","decl":{"start":{"line":82,"column":9},"end":{"line":82,"column":18}},"loc":{"start":{"line":82,"column":34},"end":{"line":92,"column":1}},"line":82},"4":{"name":"(anonymous_4)","decl":{"start":{"line":83,"column":23},"end":{"line":83,"column":24}},"loc":{"start":{"line":83,"column":47},"end":{"line":91,"column":5}},"line":83},"5":{"name":"passesMComparator","decl":{"start":{"line":94,"column":9},"end":{"line":94,"column":26}},"loc":{"start":{"line":94,"column":62},"end":{"line":108,"column":1}},"line":94},"6":{"name":"matchesSField","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":22}},"loc":{"start":{"line":109,"column":45},"end":{"line":131,"column":1}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{"line":6,"column":4},"end":{"line":8,"column":5}}],"line":6},"1":{"loc":{"start":{"line":11,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":28,"column":5}},{"start":{"line":11,"column":4},"end":{"line":28,"column":5}}],"line":11},"2":{"loc":{"start":{"line":17,"column":9},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":28,"column":5}},{"start":{"line":17,"column":9},"end":{"line":28,"column":5}}],"line":17},"3":{"loc":{"start":{"line":35,"column":4},"end":{"line":64,"column":5}},"type":"switch","locations":[{"start":{"line":36,"column":8},"end":{"line":41,"column":34}},{"start":{"line":42,"column":8},"end":{"line":46,"column":34}},{"start":{"line":47,"column":8},"end":{"line":48,"column":74}},{"start":{"line":49,"column":8},"end":{"line":50,"column":74}},{"start":{"line":51,"column":8},"end":{"line":52,"column":74}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":62,"column":8},"end":{"line":63,"column":34}}],"line":35},"4":{"loc":{"start":{"line":39,"column":33},"end":{"line":39,"column":82}},"type":"binary-expr","locations":[{"start":{"line":39,"column":33},"end":{"line":39,"column":47}},{"start":{"line":39,"column":51},"end":{"line":39,"column":82}}],"line":39},"5":{"loc":{"start":{"line":44,"column":33},"end":{"line":44,"column":82}},"type":"binary-expr","locations":[{"start":{"line":44,"column":33},"end":{"line":44,"column":47}},{"start":{"line":44,"column":51},"end":{"line":44,"column":82}}],"line":44},"6":{"loc":{"start":{"line":72,"column":12},"end":{"line":75,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":75,"column":13}},{"start":{"line":72,"column":12},"end":{"line":75,"column":13}}],"line":72},"7":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"8":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"9":{"loc":{"start":{"line":98,"column":4},"end":{"line":107,"column":5}},"type":"switch","locations":[{"start":{"line":99,"column":8},"end":{"line":100,"column":41}},{"start":{"line":101,"column":8},"end":{"line":102,"column":41}},{"start":{"line":103,"column":8},"end":{"line":104,"column":43}},{"start":{"line":105,"column":8},"end":{"line":106,"column":24}}],"line":98},"10":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":4},"end":{"line":115,"column":5}}],"line":113},"11":{"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":41}},"type":"binary-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":22}},{"start":{"line":113,"column":26},"end":{"line":113,"column":41}}],"line":113},"12":{"loc":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},{"start":{"line":116,"column":4},"end":{"line":118,"column":5}}],"line":116},"13":{"loc":{"start":{"line":116,"column":8},"end":{"line":116,"column":37}},"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":20}},{"start":{"line":116,"column":24},"end":{"line":116,"column":37}}],"line":116},"14":{"loc":{"start":{"line":119,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":130,"column":5}},{"start":{"line":119,"column":4},"end":{"line":130,"column":5}}],"line":119},"15":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":54}},"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":30}},{"start":{"line":119,"column":34},"end":{"line":119,"column":54}}],"line":119},"16":{"loc":{"start":{"line":122,"column":9},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":9},"end":{"line":130,"column":5}},{"start":{"line":122,"column":9},"end":{"line":130,"column":5}}],"line":122},"17":{"loc":{"start":{"line":125,"column":9},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":9},"end":{"line":130,"column":5}},{"start":{"line":125,"column":9},"end":{"line":130,"column":5}}],"line":125}},"s":{"0":1,"1":1,"2":1,"3":75,"4":2,"5":73,"6":73,"7":73,"8":2,"9":2,"10":2,"11":2,"12":71,"13":57,"14":57,"15":57,"16":14,"17":14,"18":30,"19":14,"20":1,"21":3219033,"22":3219033,"23":3219033,"24":3219033,"25":581508,"26":581508,"27":1227628,"28":581508,"29":263450,"30":531902,"31":263450,"32":666199,"33":477411,"34":387657,"35":69614,"36":768191,"37":5003,"38":0,"39":1,"40":31,"41":31,"42":11089,"43":11089,"44":29539,"45":29441,"46":29441,"47":11089,"48":31,"49":1,"50":31,"51":23314,"52":7325,"53":15989,"54":4031,"55":11958,"56":1,"57":1531267,"58":1531267,"59":1531267,"60":1531267,"61":666199,"62":477411,"63":387657,"64":0,"65":768191,"66":768191,"67":768191,"68":768191,"69":10004,"70":758187,"71":187424,"72":570763,"73":167516,"74":403247,"75":131771,"76":271476,"77":139125,"78":132351},"f":{"0":75,"1":3219033,"2":31,"3":31,"4":23314,"5":1531267,"6":768191},"b":{"0":[2,73],"1":[2,71],"2":[57,14],"3":[581508,263450,666199,477411,387657,69614,768191,5003,0],"4":[1227628,626681],"5":[531902,524191],"6":[29441,98],"7":[7325,15989],"8":[4031,11958],"9":[666199,477411,387657,0],"10":[10004,758187],"11":[768191,763189],"12":[187424,570763],"13":[758187,187424],"14":[167516,403247],"15":[570763,299287],"16":[131771,271476],"17":[139125,132351]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/queryScripts/ExecuteQuery.ts","sources":["/mnt/d/repos/project_team279/src/queryScripts/ExecuteQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {SectionPruned} from \"../models/ISection\";\nimport {QueryASTNode} from \"../models/QueryASTNode\";\nimport {InsightResult} from \"../controller/IInsightFacade\";\n\n\nexport function processQueryToAST(queryItem: any) {\n\tif (Object.keys(queryItem).length === 0) {\n\t\t// node with dummy key and no children should automatically pass PassesQuery\n\t\treturn new QueryASTNode(\"no_filter\", []);\n\t}\n\t// at top level key[0] WHERE has one key and value\n\tlet queryItemKey = Object.keys(queryItem)[0];\n\tlet itemChildren = queryItem[queryItemKey];\n\n\t/* if the current query item has a value that isn't a list we've reached our base case (comparison with key : value)\n\t   else we iterate through list to make a new node for each child */\n\tif (queryItemKey === \"NOT\"){\n\t\tlet notNode = new QueryASTNode(queryItemKey, []);\n\t\tlet childNode = processQueryToAST(itemChildren);\n\t\tnotNode.addChild(childNode);\n\t\treturn notNode;\n\t} else if(!Array.isArray(itemChildren)) {\n\t\t// make final node with key:value, add to list of MCOMPARISON/SCOMPARISON node\n\t\tlet leafItemKey = Object.keys(itemChildren)[0];\n\t\tlet leaf = new QueryASTNode(leafItemKey, itemChildren[leafItemKey]);\n\t\treturn new QueryASTNode(queryItemKey, [leaf]);\n\t} else {\n\t\tlet currRoot = new QueryASTNode(queryItemKey, []);\n\t\tfor(let childItem of itemChildren) {\n\t\t\tcurrRoot.addChild(processQueryToAST(childItem));\n\t\t}\n\t\treturn currRoot;\n\t}\n}\n\nexport function passesQuery(currSection: SectionPruned, query: QueryASTNode): boolean {\n\t// if section doesn't pass any of the query execution return false; will only return true if query works\n\tlet includeSection = false;\n\tlet queryNodeKey = query.key;\n\tlet queryChildren = query.children as QueryASTNode[];\n\n\tswitch (queryNodeKey) {\n\t\tcase \"AND\":\n\t\t\tincludeSection = true;\n\t\t\tfor(const child of query.children as QueryASTNode[]) {\n\t\t\t\tincludeSection = includeSection && passesQuery(currSection, child);\n\t\t\t}\n\t\t\treturn includeSection;\n\t\tcase \"OR\":\n\t\t\tfor(const child of queryChildren) {\n\t\t\t\tincludeSection = includeSection || passesQuery(currSection, child);\n\t\t\t}\n\t\t\treturn includeSection;\n\t\tcase \"LT\":\n\t\t\treturn passesMComparator(currSection, queryChildren[0], \"LT\");\n\t\tcase \"GT\":\n\t\t\treturn passesMComparator(currSection, queryChildren[0], \"GT\");\n\t\tcase \"EQ\":\n\t\t\treturn passesMComparator(currSection, queryChildren[0], \"EQ\");\n\t\tcase \"NOT\": {\n\t\t\treturn !passesQuery(currSection, queryChildren[0]);\n\t\t}\n\t\tcase \"IS\": {\n\t\t\treturn matchesSField(currSection, queryChildren[0]);\n\t\t}\n\t\tcase \"no_filter\": {\n\t\t\treturn true;\n\t\t}\n\t\tdefault:\n\t\t\treturn includeSection;\n\t}\n}\n\nexport function transformColumns(rawResult: SectionPruned[], columns: string[]) {\n\tlet transformedResult: InsightResult[] = [];\n\tfor(const section of rawResult) {\n\t\tlet transformedSection: InsightResult = {};\n\t\tfor(const column of columns) {\n\t\t\tif(!(column in transformedSection)) {\n\t\t\t\tlet fieldName = column.split(\"_\")[1];\n\t\t\t\ttransformedSection[column] = section.getField(fieldName);\n\t\t\t}\n\t\t}\n\t\ttransformedResult.push(transformedSection);\n\t}\n\treturn transformedResult;\n}\n\nexport function orderRows(result: InsightResult[], order: string) {\n\treturn result.sort((section1, section2) => {\n\t\tif (section1[order] < section2[order]) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (section1[order] > section2[order]) {\n\t\t\treturn 1;\n\t\t}\n\t\t// keep order as is\n\t\treturn 0;\n\t});\n}\n\n\n// HELPER FUNCTIONS\n\nfunction passesMComparator(section: SectionPruned, mComparison: QueryASTNode, mComparator: string) {\n\tlet fieldName = mComparison.key.split(\"_\")[1];\n\tlet mValue: number = mComparison.children as number;\n\tlet sectionField: number = section.getField(fieldName) as number;\n\tswitch(mComparator) {\n\t\tcase \"LT\":\n\t\t\treturn sectionField < mValue;\n\t\tcase \"GT\":\n\t\t\treturn sectionField > mValue;\n\t\tcase \"EQ\":\n\t\t\treturn sectionField === mValue;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\nfunction matchesSField(section: SectionPruned, sComparison: QueryASTNode) {\n\tlet fieldName = sComparison.key.split(\"_\")[1];\n\tlet sValue: string = sComparison.children as string;\n\tlet field: string = section.getField(fieldName) as string;\n\n\tif(sValue === \"*\" || sValue === \"**\") {\n\t\treturn true;\n\t}\n\n\tif(field === \"\" && sValue !== \"\") {\n\t\treturn false;\n\t}\n\n\t// sValue isn't empty when removing asterisk\n\tif (sValue.startsWith(\"*\") && sValue.endsWith(\"*\")) {\n\t\treturn field.includes(sValue.slice(1, -1));\n\t} else if (sValue.startsWith(\"*\")) {\n\t\treturn field.endsWith(sValue.slice(1));\n\t} else if (sValue.endsWith(\"*\")) {\n\t\treturn field.startsWith(sValue.slice(0, -1));\n\t} else {\n\t\treturn sValue === field;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f31b3a8222297b625daad3f85503f6e7be349cfb","contentHash":"b0aa7b9b417c9387036b01a710c4920957aecf6b5fc889d511b1973850f10f19"},"/mnt/d/repos/project_team279/src/models/QueryASTNode.ts":{"path":"/mnt/d/repos/project_team279/src/models/QueryASTNode.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"4":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":42}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":72}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":31},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":24},"end":{"line":18,"column":5}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},{"start":{"line":12,"column":8},"end":{"line":17,"column":9}}],"line":12}},"s":{"0":1,"1":1,"2":132,"3":132,"4":32,"5":32,"6":0,"7":1},"f":{"0":132,"1":32},"b":{"0":[32,0]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/models/QueryASTNode.ts","sources":["/mnt/d/repos/project_team279/src/models/QueryASTNode.ts"],"names":[],"mappings":";;;AAAA,MAAa,YAAY;IACjB,GAAG,CAAS;IACZ,QAAQ,CAAmC;IAElD,YAAY,GAAQ,EAAE,QAA0C;QAC/D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAE1B,CAAC;IAGM,QAAQ,CAAC,SAAuB;QACtC,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACN,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC5D;IACF,CAAC;CAED;AAnBD,oCAmBC","sourcesContent":["export class QueryASTNode {\n\tpublic key: string;\n\tpublic children: QueryASTNode[] | string | number;\n\n\tconstructor(key: any, children: QueryASTNode[] | string | number) {\n\t\tthis.key = key;\n\t\tthis.children = children;\n\n\t}\n\n\t// function should only add child to node with list of QueryASTNodes as children\n\tpublic addChild(childNode: QueryASTNode) {\n\t\tif(Array.isArray(this.children)) {\n\t\t\tthis.children.push(childNode);\n\t\t} else {\n\t\t\tthrow new Error(\"trying to add child nodes to a leaf node\");\n\t\t}\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a92b39d9ec8bdf4ccf471f55199f0a5f8d37618","contentHash":"0ae51bca3923b3773b247b0a7de188e96e0b2c2ae129e08a6076bddd7238d3b0"},"/mnt/d/repos/project_team279/src/queryScripts/ValidateQuery.ts":{"path":"/mnt/d/repos/project_team279/src/queryScripts/ValidateQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":52}},"6":{"start":{"line":8,"column":19},"end":{"line":8,"column":21}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":33}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":37}},"12":{"start":{"line":15,"column":4},"end":{"line":18,"column":6}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":72}},"16":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":103}},"18":{"start":{"line":30,"column":19},"end":{"line":30,"column":34}},"19":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"20":{"start":{"line":31,"column":35},"end":{"line":31,"column":50}},"21":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"22":{"start":{"line":33,"column":12},"end":{"line":33,"column":109}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":24}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":86}},"25":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"26":{"start":{"line":43,"column":8},"end":{"line":43,"column":65}},"27":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"28":{"start":{"line":46,"column":8},"end":{"line":46,"column":72}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":34}},"30":{"start":{"line":51,"column":18},"end":{"line":51,"column":44}},"31":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"32":{"start":{"line":53,"column":8},"end":{"line":53,"column":15}},"33":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":96}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":49}},"36":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":67}},"38":{"start":{"line":64,"column":18},"end":{"line":64,"column":34}},"39":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"40":{"start":{"line":66,"column":8},"end":{"line":66,"column":75}},"41":{"start":{"line":68,"column":18},"end":{"line":68,"column":36}},"42":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":44}},"44":{"start":{"line":72,"column":18},"end":{"line":72,"column":45}},"45":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"46":{"start":{"line":74,"column":8},"end":{"line":74,"column":75}},"47":{"start":{"line":76,"column":19},"end":{"line":76,"column":35}},"48":{"start":{"line":77,"column":4},"end":{"line":77,"column":40}},"49":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"50":{"start":{"line":79,"column":8},"end":{"line":79,"column":80}},"51":{"start":{"line":82,"column":18},"end":{"line":82,"column":42}},"52":{"start":{"line":83,"column":24},"end":{"line":88,"column":1}},"53":{"start":{"line":89,"column":19},"end":{"line":89,"column":59}},"54":{"start":{"line":90,"column":21},"end":{"line":90,"column":66}},"55":{"start":{"line":91,"column":18},"end":{"line":91,"column":103}},"56":{"start":{"line":92,"column":15},"end":{"line":92,"column":41}},"57":{"start":{"line":93,"column":23},"end":{"line":93,"column":49}},"58":{"start":{"line":95,"column":18},"end":{"line":95,"column":34}},"59":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"60":{"start":{"line":97,"column":8},"end":{"line":97,"column":91}},"61":{"start":{"line":99,"column":16},"end":{"line":99,"column":31}},"62":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"63":{"start":{"line":101,"column":8},"end":{"line":101,"column":91}},"64":{"start":{"line":103,"column":13},"end":{"line":103,"column":21}},"65":{"start":{"line":104,"column":4},"end":{"line":104,"column":26}},"66":{"start":{"line":105,"column":16},"end":{"line":105,"column":24}},"67":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"68":{"start":{"line":107,"column":8},"end":{"line":107,"column":91}},"69":{"start":{"line":109,"column":4},"end":{"line":117,"column":5}},"70":{"start":{"line":110,"column":27},"end":{"line":110,"column":52}},"71":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"72":{"start":{"line":112,"column":12},"end":{"line":112,"column":19}},"73":{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},"74":{"start":{"line":115,"column":12},"end":{"line":115,"column":87}},"75":{"start":{"line":119,"column":0},"end":{"line":119,"column":44}}},"fnMap":{"0":{"name":"validateQuery","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":30},"end":{"line":19,"column":1}},"line":9},"1":{"name":"validateRootStructure","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":30}},"loc":{"start":{"line":21,"column":38},"end":{"line":25,"column":1}},"line":21},"2":{"name":"validateIDs","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":20}},"loc":{"start":{"line":26,"column":28},"end":{"line":40,"column":1}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":35},"end":{"line":31,"column":50}},"line":31},"4":{"name":"validateBody","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":21}},"loc":{"start":{"line":41,"column":29},"end":{"line":49,"column":1}},"line":41},"5":{"name":"validateWhere","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":22}},"loc":{"start":{"line":50,"column":31},"end":{"line":59,"column":1}},"line":50},"6":{"name":"validateOptions","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":24}},"loc":{"start":{"line":60,"column":32},"end":{"line":81,"column":1}},"line":60},"7":{"name":"validateQueryKey","decl":{"start":{"line":94,"column":9},"end":{"line":94,"column":25}},"loc":{"start":{"line":94,"column":42},"end":{"line":118,"column":1}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"1":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"2":{"loc":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},{"start":{"line":31,"column":4},"end":{"line":39,"column":5}}],"line":31},"3":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"4":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42},"5":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{"line":45,"column":4},"end":{"line":47,"column":5}}],"line":45},"6":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{"line":52,"column":4},"end":{"line":54,"column":5}}],"line":52},"7":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{"line":55,"column":4},"end":{"line":57,"column":5}}],"line":55},"8":{"loc":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},{"start":{"line":61,"column":4},"end":{"line":63,"column":5}}],"line":61},"9":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"10":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{"line":73,"column":4},"end":{"line":75,"column":5}}],"line":73},"11":{"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":63}},"type":"binary-expr","locations":[{"start":{"line":73,"column":9},"end":{"line":73,"column":22}},{"start":{"line":73,"column":26},"end":{"line":73,"column":47}},{"start":{"line":73,"column":52},"end":{"line":73,"column":63}}],"line":73},"12":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{"line":78,"column":4},"end":{"line":80,"column":5}}],"line":78},"13":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{"line":96,"column":4},"end":{"line":98,"column":5}}],"line":96},"14":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{"line":100,"column":4},"end":{"line":102,"column":5}}],"line":100},"15":{"loc":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},{"start":{"line":106,"column":4},"end":{"line":108,"column":5}}],"line":106},"16":{"loc":{"start":{"line":109,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":117,"column":5}},{"start":{"line":109,"column":4},"end":{"line":117,"column":5}}],"line":109},"17":{"loc":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},{"start":{"line":111,"column":8},"end":{"line":116,"column":9}}],"line":111},"18":{"loc":{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},{"start":{"line":114,"column":13},"end":{"line":116,"column":9}}],"line":114}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":63,"8":63,"9":61,"10":50,"11":43,"12":43,"13":1,"14":63,"15":2,"16":43,"17":0,"18":43,"19":43,"20":207,"21":43,"22":0,"23":43,"24":0,"25":61,"26":0,"27":61,"28":0,"29":61,"30":61,"31":61,"32":3,"33":58,"34":0,"35":58,"36":50,"37":0,"38":50,"39":50,"40":2,"41":48,"42":48,"43":120,"44":46,"45":46,"46":0,"47":46,"48":46,"49":44,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":235,"59":235,"60":3,"61":232,"62":232,"63":0,"64":232,"65":232,"66":232,"67":232,"68":4,"69":228,"70":66,"71":66,"72":0,"73":66,"74":0,"75":1},"f":{"0":63,"1":63,"2":43,"3":207,"4":61,"5":61,"6":50,"7":235},"b":{"0":[2,61],"1":[0,43],"2":[43,0],"3":[0,43],"4":[0,61],"5":[0,61],"6":[3,58],"7":[0,58],"8":[0,50],"9":[2,48],"10":[0,46],"11":[46,46,46],"12":[1,43],"13":[3,232],"14":[0,232],"15":[4,228],"16":[66,162],"17":[0,66],"18":[0,66]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/queryScripts/ValidateQuery.ts","sources":["/mnt/d/repos/project_team279/src/queryScripts/ValidateQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\r\nimport {QueryWithID} from \"../models/IQuery\";\r\nimport {validateFilter} from \"./ValidateFilter\";\r\nimport {isJSON} from \"./PerformQuery\";\r\nimport {doesDatasetIDExist} from \"../controller/DiskUtil\";\r\n\r\nlet idStringList: string[] = [];\r\n\r\n// if query is valid, returns id_string, else false\r\nexport function validateQuery(query: object): QueryWithID {\r\n\t// reset the idStringList whenever we validate a new query.\r\n\tidStringList = [];\r\n\tvalidateRootStructure(query);\r\n\tvalidateBody(query);\r\n\tvalidateOptions(query);\r\n\tlet idString: string = validateIDs(query);\r\n\treturn {\r\n\t\tid: idString,\r\n\t\tquery: query\r\n\t};\r\n}\r\n\r\n// check if BODY (WHERE) and OPTIONS are the only keys present\r\n// check if all IDs in query are the same\r\nfunction validateRootStructure(query: object) {\r\n\tif (Object.keys(query).length !== 2) {\r\n\t\tthrow new InsightError(\"Excess keys in query\");\r\n\t}\r\n}\r\n// check that all id_strings in query are the same\r\n// if same, return the id, else throw InsightError\r\nfunction validateIDs(query: object): string | never {\r\n\t// is this possible to reach? how can you have a query that doesn't reference a dataset\r\n\tif (idStringList.length === 0) {\r\n\t\tthrow new InsightError(\"something is definitely wrong if you got this error\");\r\n\t}\r\n\tlet idString = idStringList[0];\r\n\tif (idStringList.every((id) => id === idString)) {\r\n\t\tif (!doesDatasetIDExist(idString)) {\r\n\t\t\tthrow new InsightError(\"Referenced dataset \\\"\" + idString + \"\\\" not added yet\");\r\n\t\t}\r\n\t\treturn idString;\r\n\t} else {\r\n\t\tthrow new InsightError(\"Cannot query more than one dataset\");\r\n\t}\r\n}\r\n\r\nfunction validateBody(query: object) {\r\n\tif (!(\"WHERE\" in query)) {\r\n\t\tthrow new InsightError(\"Missing WHERE\");\r\n\t}\r\n\t// TODO: can WHERE have undefined?\r\n\tif (!isJSON(query[\"WHERE\"])) {\r\n\t\tthrow new InsightError(\"WHERE must be object\");\r\n\t}\r\n\tvalidateWhere(query[\"WHERE\"] as object);\r\n}\r\n\r\nfunction validateWhere(filter: object) {\r\n\t// if filter is empty, it is trivially valid\r\n\tlet numKeys = Object.keys(filter).length;\r\n\tif (numKeys === 0) {\r\n\t\treturn;\r\n\t}\r\n\tif (numKeys > 1) {\r\n\t\tthrow new InsightError(\"WHERE should only have 1 key, has \" + numKeys);\r\n\t}\r\n\tvalidateFilter(filter);\r\n}\r\n\r\n/*\r\n \"OPTIONS\": {\r\n \t\"COLUMNS\": [\r\n \t\t\"XXX_XXX\",\r\n \t\t\"XXX_XXX\"\r\n \t],\r\n \t\"ORDER\": \"XXX_XXX\"\r\n }\r\n*/\r\nfunction validateOptions(query: object) {\r\n\tif (!(\"OPTIONS\" in query)) {\r\n\t\tthrow new InsightError(\"Missing OPTIONS\");\r\n\t}\r\n\tlet options = query[\"OPTIONS\"] as {[index: string]: string[] | string};\r\n\tif (!(\"COLUMNS\" in options)) {\r\n\t\tthrow new InsightError(\"OPTIONS missing COLUMNS\");\r\n\t}\r\n\tlet colKeys: string[] = options[\"COLUMNS\"] as string[];\r\n\tfor (let colKey of colKeys) {\r\n\t\tvalidateQueryKey(\"COLUMNS\", colKey);\r\n\t}\r\n\tlet numKeys = Object.keys(options).length;\r\n\tif ((numKeys === 2 && !(\"ORDER\" in options)) || numKeys > 2) {\r\n\t\tthrow new InsightError(\"Invalid keys in OPTIONS\");\r\n\t}\r\n\tlet orderKey: string = options[\"ORDER\"] as string;\r\n\tvalidateQueryKey(\"ORDER\", orderKey);\r\n\tif (!(colKeys.includes(orderKey))) {\r\n\t\tthrow new InsightError(\"ORDER key must be in COLUMNS\");\r\n\t}\r\n}\r\n\r\nconst Operators = [\"LT\", \"GT\", \"EQ\", \"IS\"];\r\nconst OperatorTypeMap: {[index: string]: number} = {\r\n\tLT: 0,\r\n\tGT: 0,\r\n\tEQ: 0,\r\n\tIS: 1,\r\n};\r\nconst MathFields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\r\nconst StringFields = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\r\nconst allFields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\r\n// lol this is so hacky but whatever\r\nconst fields = [MathFields, StringFields];\r\nconst oppositeFields = [StringFields, MathFields];\r\n// takes operator (oneof GT, LT, EQ, IS) and the qkey (idstring_field) and validates\r\n// a valid qkey must be formatted properly, and field must be correct type based on operator\r\n// updates the idStringList\r\nexport function validateQueryKey(fieldKey: string, qkey: string) {\r\n\tconst regex = /^[^_]+_[^_]+$/g;\r\n\tif (!regex.test(qkey)) {\r\n\t\tthrow new InsightError(\"Invalid key \" + qkey + \" in \" + fieldKey);\r\n\t}\r\n\r\n\tlet split = qkey.split(\"_\");\r\n\tif (split.length !== 2) {\r\n\t\tthrow new InsightError(\"Invalid key \" + qkey + \" in \" + fieldKey);\r\n\t}\r\n\tlet id = split[0];\r\n\tidStringList.push(id);\r\n\tlet field = split[1];\r\n\tif (!(allFields.includes(field))) {\r\n\t\tthrow new InsightError(\"Invalid key \" + qkey + \" in \" + fieldKey);\r\n\t}\r\n\t// if fieldKey is in operators, we must validate the fieldType\r\n\tif (Operators.includes(fieldKey)) {\r\n\t\tlet operatorType = OperatorTypeMap[fieldKey];\r\n\t\tif (field in fields[operatorType]) {\r\n\t\t\treturn;\r\n\t\t} else if (field in oppositeFields[operatorType]) {\r\n\t\t\tthrow new InsightError(\"Invalid key type in \" + fieldKey);\r\n\t\t}\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f2669c9d3e6b1a1ea5dcfb3a58f7ed763a43a17d","contentHash":"afd016da5628d97a07c395e716511e557ef7fc7cc707a2277b47b8629c341218"},"/mnt/d/repos/project_team279/src/queryScripts/ValidateFilter.ts":{"path":"/mnt/d/repos/project_team279/src/queryScripts/ValidateFilter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":50}},"5":{"start":{"line":8,"column":0},"end":{"line":16,"column":36}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":30}},"13":{"start":{"line":17,"column":26},"end":{"line":25,"column":1}},"14":{"start":{"line":27,"column":14},"end":{"line":27,"column":36}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":27}},"16":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":40}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":40}},"20":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":77}},"22":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":73}},"24":{"start":{"line":44,"column":18},"end":{"line":44,"column":43}},"25":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":97}},"27":{"start":{"line":50,"column":16},"end":{"line":50,"column":38}},"28":{"start":{"line":51,"column":20},"end":{"line":51,"column":33}},"29":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"30":{"start":{"line":53,"column":8},"end":{"line":53,"column":86}},"31":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"32":{"start":{"line":56,"column":8},"end":{"line":56,"column":29}},"33":{"start":{"line":60,"column":19},"end":{"line":60,"column":41}},"34":{"start":{"line":61,"column":20},"end":{"line":61,"column":36}},"35":{"start":{"line":62,"column":15},"end":{"line":62,"column":40}},"36":{"start":{"line":63,"column":16},"end":{"line":63,"column":31}},"37":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"38":{"start":{"line":65,"column":8},"end":{"line":65,"column":108}},"39":{"start":{"line":67,"column":4},"end":{"line":67,"column":58}},"40":{"start":{"line":70,"column":19},"end":{"line":70,"column":41}},"41":{"start":{"line":71,"column":20},"end":{"line":71,"column":36}},"42":{"start":{"line":72,"column":15},"end":{"line":72,"column":40}},"43":{"start":{"line":73,"column":16},"end":{"line":73,"column":31}},"44":{"start":{"line":74,"column":4},"end":{"line":74,"column":58}},"45":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"46":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"47":{"start":{"line":79,"column":8},"end":{"line":79,"column":108}},"48":{"start":{"line":81,"column":18},"end":{"line":81,"column":34}},"49":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"50":{"start":{"line":83,"column":8},"end":{"line":83,"column":123}},"51":{"start":{"line":87,"column":19},"end":{"line":87,"column":32}},"52":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":23},"end":{"line":16,"column":1}},"line":8},"1":{"name":"validateFilter","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":23}},"loc":{"start":{"line":26,"column":32},"end":{"line":33,"column":1}},"line":26},"2":{"name":"validateFilterKey","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":32},"end":{"line":39,"column":1}},"line":35},"3":{"name":"basicValidate","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":22}},"loc":{"start":{"line":40,"column":35},"end":{"line":48,"column":1}},"line":40},"4":{"name":"validateLogic","decl":{"start":{"line":49,"column":9},"end":{"line":49,"column":22}},"loc":{"start":{"line":49,"column":31},"end":{"line":58,"column":1}},"line":49},"5":{"name":"validateMComparison","decl":{"start":{"line":59,"column":9},"end":{"line":59,"column":28}},"loc":{"start":{"line":59,"column":37},"end":{"line":68,"column":1}},"line":59},"6":{"name":"validateSComparison","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":28}},"loc":{"start":{"line":69,"column":37},"end":{"line":76,"column":1}},"line":69},"7":{"name":"validateWildcard","decl":{"start":{"line":77,"column":9},"end":{"line":77,"column":25}},"loc":{"start":{"line":77,"column":49},"end":{"line":85,"column":1}},"line":77},"8":{"name":"validateNegation","decl":{"start":{"line":86,"column":9},"end":{"line":86,"column":25}},"loc":{"start":{"line":86,"column":34},"end":{"line":89,"column":1}},"line":86}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":3},"end":{"line":16,"column":34}},"type":"binary-expr","locations":[{"start":{"line":16,"column":3},"end":{"line":16,"column":13}},{"start":{"line":16,"column":18},"end":{"line":16,"column":33}}],"line":16},"1":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":29,"column":55}},"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":55}}],"line":29},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36},"4":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":4},"end":{"line":43,"column":5}}],"line":41},"5":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{"line":45,"column":4},"end":{"line":47,"column":5}}],"line":45},"6":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{"line":52,"column":4},"end":{"line":54,"column":5}}],"line":52},"7":{"loc":{"start":{"line":52,"column":8},"end":{"line":52,"column":59}},"type":"binary-expr","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":33}},{"start":{"line":52,"column":37},"end":{"line":52,"column":59}}],"line":52},"8":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},{"start":{"line":64,"column":4},"end":{"line":66,"column":5}}],"line":64},"9":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{"line":78,"column":4},"end":{"line":80,"column":5}}],"line":78},"10":{"loc":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},{"start":{"line":82,"column":4},"end":{"line":84,"column":5}}],"line":82}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":92,"15":92,"16":92,"17":72,"18":91,"19":1,"20":92,"21":0,"22":72,"23":1,"24":71,"25":71,"26":0,"27":20,"28":20,"29":20,"30":4,"31":16,"32":32,"33":46,"34":46,"35":46,"36":46,"37":46,"38":0,"39":46,"40":23,"41":23,"42":23,"43":23,"44":23,"45":22,"46":22,"47":0,"48":22,"49":22,"50":3,"51":2,"52":2},"f":{"0":1,"1":92,"2":92,"3":72,"4":20,"5":46,"6":23,"7":22,"8":2},"b":{"0":[1,1],"1":[72,20],"2":[92,79],"3":[0,92],"4":[1,71],"5":[0,71],"6":[4,16],"7":[20,18],"8":[0,46],"9":[0,22],"10":[3,19]},"inputSourceMap":{"version":3,"file":"/mnt/d/repos/project_team279/src/queryScripts/ValidateFilter.ts","sources":["/mnt/d/repos/project_team279/src/queryScripts/ValidateFilter.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\r\nimport {isJSON} from \"./PerformQuery\";\r\nimport {validateQueryKey} from \"./ValidateQuery\";\r\n\r\ntype ValidationFunction = (filter: any) => void;\r\nenum FilterKeys {\r\n\t\"AND\" = \"AND\",\r\n\t\"OR\" = \"OR\",\r\n\t\"LT\" = \"LT\",\r\n\t\"GT\" = \"GT\",\r\n\t\"EQ\" = \"EQ\",\r\n\t\"IS\" = \"IS\",\r\n\t\"NOT\" = \"NOT\"\r\n}\r\n\r\nlet filterValidationMap: {[index: string]: ValidationFunction} = {\r\n\tAND: validateLogic,\r\n\tOR: validateLogic,\r\n\tLT: validateMComparison,\r\n\tGT: validateMComparison,\r\n\tEQ: validateMComparison,\r\n\tIS: validateSComparison,\r\n\tNOT: validateNegation\r\n};\r\n\r\n// filter must have one key\r\nexport function validateFilter(filter: {[index: string]: any}) {\r\n\tlet key = Object.keys(filter)[0];\r\n\tvalidateFilterKey(key);\r\n\t// double check this behaviour\r\n\tif (key !== FilterKeys.AND && key !== FilterKeys.OR) {\r\n\t\tbasicValidate(key, filter[key]);\r\n\t}\r\n\tfilterValidationMap[key](filter);\r\n}\r\n\r\nfunction validateFilterKey(key: string) {\r\n\tif (!(key in FilterKeys)) {\r\n\t\tthrow new InsightError(\"Invalid filter key:\" + key);\r\n\t}\r\n}\r\n\r\n// for mcomparison, scomparison, and negate, the value in the KV pair should be an object with a single key\r\nfunction basicValidate(key: string, value: object) {\r\n\tif (!isJSON(value)) {\r\n\t\tthrow new InsightError(key + \" must be object\");\r\n\t}\r\n\tlet numKeys = Object.keys(value).length;\r\n\tif (numKeys !== 1) {\r\n\t\tthrow new InsightError(key + \" should only have 1 key, has \" + numKeys);\r\n\t}\r\n}\r\n\r\n/* logic can have an array of filters\r\n e.g. AND: [{}, {}, {}]\r\n \t\t   ^filterArr ^\r\n */\r\nfunction validateLogic(filter: {[index: string]: object[]}) {\r\n\tlet logic = Object.keys(filter)[0];\r\n\tlet filterArr = filter[logic];\r\n\tif (!Array.isArray(filterArr) || filterArr.length === 0) {\r\n\t\tthrow new InsightError(logic + \" must be a non-empty array\");\r\n\t}\r\n\tfor (let elem of filterArr) {\r\n\t\tvalidateFilter(elem);\r\n\t}\r\n}\r\n\r\n// e.g. \"GT\": {\"XXX_year\": 2010}\r\n// <operator>: {<attribute == qkey: value>}\r\nfunction validateMComparison(filter: {[index: string]: {[index: string]: number}}) {\r\n\tlet operator = Object.keys(filter)[0];\r\n\tlet attribute = filter[operator];\r\n\tlet qkey = Object.keys(attribute)[0];\r\n\tlet value = attribute[qkey];\r\n\tif (typeof value !== \"number\") {\r\n\t\tthrow new InsightError(\"Invalid value type in \" + operator + \", should be number\");\r\n\t}\r\n\tvalidateQueryKey(operator, qkey);\r\n}\r\n\r\n// e.g. \"IS\": {\"XXX_title\": \"*asdf\"}\r\nfunction validateSComparison(filter: {[index: string]: {[index: string]: string}}) {\r\n\tlet operator = Object.keys(filter)[0];\r\n\tlet attribute = filter[operator];\r\n\tlet qkey = Object.keys(attribute)[0];\r\n\tlet value = attribute[qkey];\r\n\tvalidateQueryKey(operator, qkey);\r\n\tvalidateWildcard(operator, value);\r\n}\r\n\r\nfunction validateWildcard(operator: string, inputString: string) {\r\n\tif (typeof inputString !== \"string\") {\r\n\t\tthrow new InsightError(\"Invalid value type in \" + operator + \", should be string\");\r\n\t}\r\n\tconst regex = /^\\*?[^*]*\\*?$/g;\r\n\tif (!regex.test(inputString)) {\r\n\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters of input strings\");\r\n\t}\r\n}\r\n\r\n// e.g. \"NOT\": {\"XXX\": {XXX}}\r\n// \t\t\t   ^  toNegate  ^\r\nfunction validateNegation(filter: {[index: string]: object}) {\r\n\tlet toNegate = filter[\"NOT\"];\r\n\tvalidateFilter(toNegate);\r\n}\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"90065e4e3f039a27dd7dbd1b23ae911e888c0fd7","contentHash":"166b03cae6285d6ea368a2043afd30135a25930326962469da2bcacf0c0c1039"}}